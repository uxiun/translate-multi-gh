"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[365],{7207:function(e,a,n){n.d(a,{Z:function(){return i}});var t={aa:{name:"Afar",nativeName:"Afaraf"},ab:{name:"Abkhaz",nativeName:"аҧсуа бызшәа"},ae:{name:"Avestan",nativeName:"avesta"},af:{name:"Afrikaans",nativeName:"Afrikaans"},ak:{name:"Akan",nativeName:"Akan"},am:{name:"Amharic",nativeName:"አማርኛ"},an:{name:"Aragonese",nativeName:"aragon\xe9s"},ar:{name:"Arabic",nativeName:"اَلْعَرَبِيَّةُ"},as:{name:"Assamese",nativeName:"অসমীয়া"},av:{name:"Avaric",nativeName:"авар мацӀ"},ay:{name:"Aymara",nativeName:"aymar aru"},az:{name:"Azerbaijani",nativeName:"azərbaycan dili"},ba:{name:"Bashkir",nativeName:"башҡорт теле"},be:{name:"Belarusian",nativeName:"беларуская мова"},bg:{name:"Bulgarian",nativeName:"български език"},bi:{name:"Bislama",nativeName:"Bislama"},bm:{name:"Bambara",nativeName:"bamanankan"},bn:{name:"Bengali",nativeName:"বাংলা"},bo:{name:"Tibetan",nativeName:"བོད་ཡིག"},br:{name:"Breton",nativeName:"brezhoneg"},bs:{name:"Bosnian",nativeName:"bosanski jezik"},ca:{name:"Catalan",nativeName:"Catal\xe0"},ce:{name:"Chechen",nativeName:"нохчийн мотт"},ch:{name:"Chamorro",nativeName:"Chamoru"},co:{name:"Corsican",nativeName:"corsu"},cr:{name:"Cree",nativeName:"ᓀᐦᐃᔭᐍᐏᐣ"},cs:{name:"Czech",nativeName:"čeština"},cu:{name:"Old Church Slavonic",nativeName:"ѩзыкъ словѣньскъ"},cv:{name:"Chuvash",nativeName:"чӑваш чӗлхи"},cy:{name:"Welsh",nativeName:"Cymraeg"},da:{name:"Danish",nativeName:"dansk"},de:{name:"German",nativeName:"Deutsch"},dv:{name:"Divehi",nativeName:"ދިވެހި"},dz:{name:"Dzongkha",nativeName:"རྫོང་ཁ"},ee:{name:"Ewe",nativeName:"Eʋegbe"},el:{name:"Greek",nativeName:"Ελληνικά"},en:{name:"English",nativeName:"English"},eo:{name:"Esperanto",nativeName:"Esperanto"},es:{name:"Spanish",nativeName:"Espa\xf1ol"},et:{name:"Estonian",nativeName:"eesti"},eu:{name:"Basque",nativeName:"euskara"},fa:{name:"Persian",nativeName:"فارسی"},ff:{name:"Fula",nativeName:"Fulfulde"},fi:{name:"Finnish",nativeName:"suomi"},fj:{name:"Fijian",nativeName:"vosa Vakaviti"},fo:{name:"Faroese",nativeName:"f\xf8royskt"},fr:{name:"French",nativeName:"Fran\xe7ais"},fy:{name:"Western Frisian",nativeName:"Frysk"},ga:{name:"Irish",nativeName:"Gaeilge"},gd:{name:"Scottish Gaelic",nativeName:"G\xe0idhlig"},gl:{name:"Galician",nativeName:"galego"},gn:{name:"Guaran\xed",nativeName:"Ava\xf1e'ẽ"},gu:{name:"Gujarati",nativeName:"ગુજરાતી"},gv:{name:"Manx",nativeName:"Gaelg"},ha:{name:"Hausa",nativeName:"هَوُسَ"},he:{name:"Hebrew",nativeName:"עברית"},hi:{name:"Hindi",nativeName:"हिन्दी"},ho:{name:"Hiri Motu",nativeName:"Hiri Motu"},hr:{name:"Croatian",nativeName:"Hrvatski"},ht:{name:"Haitian",nativeName:"Krey\xf2l ayisyen"},hu:{name:"Hungarian",nativeName:"magyar"},hy:{name:"Armenian",nativeName:"Հայերեն"},hz:{name:"Herero",nativeName:"Otjiherero"},ia:{name:"Interlingua",nativeName:"Interlingua"},id:{name:"Indonesian",nativeName:"Bahasa Indonesia"},ie:{name:"Interlingue",nativeName:"Interlingue"},ig:{name:"Igbo",nativeName:"Asụsụ Igbo"},ii:{name:"Nuosu",nativeName:"ꆈꌠ꒿ Nuosuhxop"},ik:{name:"Inupiaq",nativeName:"I\xf1upiaq"},io:{name:"Ido",nativeName:"Ido"},is:{name:"Icelandic",nativeName:"\xcdslenska"},it:{name:"Italian",nativeName:"Italiano"},iu:{name:"Inuktitut",nativeName:"ᐃᓄᒃᑎᑐᑦ"},ja:{name:"Japanese",nativeName:"日本語"},jv:{name:"Javanese",nativeName:"basa Jawa"},ka:{name:"Georgian",nativeName:"ქართული"},kg:{name:"Kongo",nativeName:"Kikongo"},ki:{name:"Kikuyu",nativeName:"Gĩkũyũ"},kj:{name:"Kwanyama",nativeName:"Kuanyama"},kk:{name:"Kazakh",nativeName:"қазақ тілі"},kl:{name:"Kalaallisut",nativeName:"kalaallisut"},km:{name:"Khmer",nativeName:"ខេមរភាសា"},kn:{name:"Kannada",nativeName:"ಕನ್ನಡ"},ko:{name:"Korean",nativeName:"한국어"},kr:{name:"Kanuri",nativeName:"Kanuri"},ks:{name:"Kashmiri",nativeName:"कश्मीरी"},ku:{name:"Kurdish",nativeName:"Kurd\xee"},kv:{name:"Komi",nativeName:"коми кыв"},kw:{name:"Cornish",nativeName:"Kernewek"},ky:{name:"Kyrgyz",nativeName:"Кыргызча"},la:{name:"Latin",nativeName:"latine"},lb:{name:"Luxembourgish",nativeName:"L\xebtzebuergesch"},lg:{name:"Ganda",nativeName:"Luganda"},li:{name:"Limburgish",nativeName:"Limburgs"},ln:{name:"Lingala",nativeName:"Ling\xe1la"},lo:{name:"Lao",nativeName:"ພາສາລາວ"},lt:{name:"Lithuanian",nativeName:"lietuvių kalba"},lu:{name:"Luba-Katanga",nativeName:"Kiluba"},lv:{name:"Latvian",nativeName:"latviešu valoda"},mg:{name:"Malagasy",nativeName:"fiteny malagasy"},mh:{name:"Marshallese",nativeName:"Kajin M̧ajeļ"},mi:{name:"Māori",nativeName:"te reo Māori"},mk:{name:"Macedonian",nativeName:"македонски јазик"},ml:{name:"Malayalam",nativeName:"മലയാളം"},mn:{name:"Mongolian",nativeName:"Монгол хэл"},mr:{name:"Marathi",nativeName:"मराठी"},ms:{name:"Malay",nativeName:"Bahasa Melayu"},mt:{name:"Maltese",nativeName:"Malti"},my:{name:"Burmese",nativeName:"ဗမာစာ"},na:{name:"Nauru",nativeName:"Dorerin Naoero"},nb:{name:"Norwegian Bokm\xe5l",nativeName:"Norsk bokm\xe5l"},nd:{name:"Northern Ndebele",nativeName:"isiNdebele"},ne:{name:"Nepali",nativeName:"नेपाली"},ng:{name:"Ndonga",nativeName:"Owambo"},nl:{name:"Dutch",nativeName:"Nederlands"},nn:{name:"Norwegian Nynorsk",nativeName:"Norsk nynorsk"},no:{name:"Norwegian",nativeName:"Norsk"},nr:{name:"Southern Ndebele",nativeName:"isiNdebele"},nv:{name:"Navajo",nativeName:"Din\xe9 bizaad"},ny:{name:"Chichewa",nativeName:"chiCheŵa"},oc:{name:"Occitan",nativeName:"occitan"},oj:{name:"Ojibwe",nativeName:"ᐊᓂᔑᓈᐯᒧᐎᓐ"},om:{name:"Oromo",nativeName:"Afaan Oromoo"},or:{name:"Oriya",nativeName:"ଓଡ଼ିଆ"},os:{name:"Ossetian",nativeName:"ирон \xe6взаг"},pa:{name:"Panjabi",nativeName:"ਪੰਜਾਬੀ"},pi:{name:"Pāli",nativeName:"पाऴि"},pl:{name:"Polish",nativeName:"Polski"},ps:{name:"Pashto",nativeName:"پښتو"},pt:{name:"Portuguese",nativeName:"Portugu\xeas"},qu:{name:"Quechua",nativeName:"Runa Simi"},rm:{name:"Romansh",nativeName:"rumantsch grischun"},rn:{name:"Kirundi",nativeName:"Ikirundi"},ro:{name:"Romanian",nativeName:"Rom\xe2nă"},ru:{name:"Russian",nativeName:"Русский"},rw:{name:"Kinyarwanda",nativeName:"Ikinyarwanda"},sa:{name:"Sanskrit",nativeName:"संस्कृतम्"},sc:{name:"Sardinian",nativeName:"sardu"},sd:{name:"Sindhi",nativeName:"सिन्धी"},se:{name:"Northern Sami",nativeName:"Davvis\xe1megiella"},sg:{name:"Sango",nativeName:"y\xe2ng\xe2 t\xee s\xe4ng\xf6"},si:{name:"Sinhala",nativeName:"සිංහල"},sk:{name:"Slovak",nativeName:"slovenčina"},sl:{name:"Slovenian",nativeName:"slovenščina"},sm:{name:"Samoan",nativeName:"gagana fa'a Samoa"},sn:{name:"Shona",nativeName:"chiShona"},so:{name:"Somali",nativeName:"Soomaaliga"},sq:{name:"Albanian",nativeName:"Shqip"},sr:{name:"Serbian",nativeName:"српски језик"},ss:{name:"Swati",nativeName:"SiSwati"},st:{name:"Southern Sotho",nativeName:"Sesotho"},su:{name:"Sundanese",nativeName:"Basa Sunda"},sv:{name:"Swedish",nativeName:"Svenska"},sw:{name:"Swahili",nativeName:"Kiswahili"},ta:{name:"Tamil",nativeName:"தமிழ்"},te:{name:"Telugu",nativeName:"తెలుగు"},tg:{name:"Tajik",nativeName:"тоҷикӣ"},th:{name:"Thai",nativeName:"ไทย"},ti:{name:"Tigrinya",nativeName:"ትግርኛ"},tk:{name:"Turkmen",nativeName:"T\xfcrkmen\xe7e"},tl:{name:"Tagalog",nativeName:"Wikang Tagalog"},tn:{name:"Tswana",nativeName:"Setswana"},to:{name:"Tonga",nativeName:"faka Tonga"},tr:{name:"Turkish",nativeName:"T\xfcrk\xe7e"},ts:{name:"Tsonga",nativeName:"Xitsonga"},tt:{name:"Tatar",nativeName:"татар теле"},tw:{name:"Twi",nativeName:"Twi"},ty:{name:"Tahitian",nativeName:"Reo Tahiti"},ug:{name:"Uyghur",nativeName:"ئۇيغۇرچە‎"},uk:{name:"Ukrainian",nativeName:"Українська"},ur:{name:"Urdu",nativeName:"اردو"},uz:{name:"Uzbek",nativeName:"Ўзбек"},ve:{name:"Venda",nativeName:"Tshivenḓa"},vi:{name:"Vietnamese",nativeName:"Tiếng Việt"},vo:{name:"Volap\xfck",nativeName:"Volap\xfck"},wa:{name:"Walloon",nativeName:"walon"},wo:{name:"Wolof",nativeName:"Wollof"},xh:{name:"Xhosa",nativeName:"isiXhosa"},yi:{name:"Yiddish",nativeName:"ייִדיש"},yo:{name:"Yoruba",nativeName:"Yor\xf9b\xe1"},za:{name:"Zhuang",nativeName:"Saɯ cueŋƅ"},zh:{name:"Chinese",nativeName:"中文"},zu:{name:"Zulu",nativeName:"isiZulu"}};class i{static getLanguages(e=[]){return e.map(e=>({code:e,name:i.getName(e),nativeName:i.getNativeName(e)}))}static getName(e){return i.validate(e)?t[e].name:""}static getAllNames(){return Object.values(t).map(e=>e.name)}static getNativeName(e){return i.validate(e)?t[e].nativeName:""}static getAllNativeNames(){return Object.values(t).map(e=>e.nativeName)}static getCode(e){let a=Object.keys(t).find(a=>{let n=t[a];return n.name.toLowerCase()===e.toLowerCase()||n.nativeName.toLowerCase()===e.toLowerCase()});return a||""}static getAllCodes(){return Object.keys(t)}static validate(e){return t.hasOwnProperty(e)}}},7535:function(e,a,n){n.d(a,{KO:function(){return v}});var t=n(959),i=n(7246);let m=(0,t.createContext)(void 0),r=e=>{let a=(0,t.useContext)(m);return(null==e?void 0:e.store)||a||(0,i.K7)()},s=e=>e instanceof Promise,o=t.use||(e=>{if("pending"===e.status)throw e;if("fulfilled"===e.status)return e.value;if("rejected"===e.status)throw e.reason;throw e.status="pending",e.then(a=>{e.status="fulfilled",e.value=a},a=>{e.status="rejected",e.reason=a}),e});function v(e,a){return[function(e,a){let n=r(a),[[i,m,v],l]=(0,t.useReducer)(a=>{let t=n.get(e);return Object.is(a[0],t)&&a[1]===n&&a[2]===e?a:[t,n,e]},void 0,()=>[n.get(e),n,e]),u=i;(m!==n||v!==e)&&(l(),u=n.get(e));let N=null==a?void 0:a.delay;return(0,t.useEffect)(()=>{let a=n.sub(e,()=>{if("number"==typeof N){setTimeout(l,N);return}l()});return l(),a},[n,e,N]),(0,t.useDebugValue)(u),s(u)?o(u):u}(e,a),function(e,a){let n=r(a),i=(0,t.useCallback)((...a)=>{if(!("write"in e))throw Error("not writable atom");return n.set(e,...a)},[n,e]);return i}(e,a)]}},7246:function(e,a,n){let t;n.d(a,{K7:function(){return k},cn:function(){return m}});let i=0;function m(e,a){let n=`atom${++i}`,t={toString:()=>n};return"function"==typeof e?t.read=e:(t.init=e,t.read=e=>e(t),t.write=(e,a,n)=>a(t,"function"==typeof n?n(e(t)):n)),a&&(t.write=a),t}let r=e=>"init"in e,s=e=>!!e.write,o=new WeakMap,v=(e,a)=>{o.set(e,a),e.catch(()=>{}).finally(()=>o.delete(e))},l=(e,a)=>{let n=o.get(e);n&&(o.delete(e),n(a))},u=(e,a)=>{e.status="fulfilled",e.value=a},N=(e,a)=>{e.status="rejected",e.reason=a},d=(e,a)=>"v"in e&&"v"in a&&Object.is(e.v,a.v),c=(e,a)=>"e"in e&&"e"in a&&Object.is(e.e,a.e),h=e=>"v"in e&&e.v instanceof Promise,g=e=>{if("e"in e)throw e.e;return e.v},f=()=>{let e,a,n;let t=new WeakMap,i=new WeakMap,m=new Map;e=new Set,a=new Set,n=new Set;let o=e=>t.get(e),f=(e,a)=>{Object.freeze(a);let n=t.get(e);if(t.set(e,a),m.has(e)||m.set(e,n),n&&h(n)){let e="v"in a?a.v instanceof Promise?a.v:Promise.resolve(a.v):Promise.reject(a.e);l(n.v,e)}},k=(e,a,n)=>{let t=new Map,i=!1;n.forEach(n=>{let m=n===e?a:o(n);m?(t.set(n,m),a.d.get(n)!==m&&(i=!0)):console.warn("[Bug] atom state not found")}),(i||a.d.size!==t.size)&&(a.d=t)},b=(e,a,n)=>{let t=o(e),i={d:(null==t?void 0:t.d)||new Map,v:a};return(n&&k(e,i,n),t&&d(t,i)&&t.d===i.d)?t:(f(e,i),i)},w=(e,a,n)=>{let t=o(e),i={d:(null==t?void 0:t.d)||new Map,e:a};return(n&&k(e,i,n),t&&c(t,i)&&t.d===i.d)?t:(f(e,i),i)},y=e=>{let a,n;let t=o(e);if(t&&(t.d.forEach((a,n)=>{n===e||i.has(n)||y(n)}),Array.from(t.d).every(([a,n])=>a===e||o(a)===n)))return t;let m=new Set,l=!0,d=a=>{if(m.add(a),a===e){let e=o(a);if(e)return g(e);if(r(a))return a.init;throw Error("no atom init")}let n=y(a);return g(n)},c={get signal(){return a||(a=new AbortController),a.signal},get setSelf(){return s(e)||console.warn("setSelf function cannot be used with read-only atom"),!n&&s(e)&&(n=(...a)=>{if(l&&console.warn("setSelf function cannot be called in sync"),!l)return K(e,...a)}),n}};try{let n=e.read(d,c);if(n instanceof Promise){let t;let i=new Promise((a,r)=>{let s=!1;n.then(n=>{s||(s=!0,b(e,i,m),u(i,n),a(n))},a=>{s||(s=!0,b(e,i,m),N(i,a),r(a))}),t=e=>{s||(s=!0,e.then(e=>u(i,e),e=>N(i,e)),a(e))}});return i.status="pending",v(i,e=>{e&&t(e),null==a||a.abort()}),b(e,i,m)}return b(e,n,m)}catch(a){return w(e,a,m)}finally{l=!1}},S=e=>g(y(e)),x=e=>{let a=i.get(e);return a||(a=A(e)),a},p=(e,a)=>!a.l.size&&(!a.t.size||1===a.t.size&&a.t.has(e)),E=e=>{let a=i.get(e);a&&p(e,a)&&z(e)},C=e=>{let a=i.get(e);null==a||a.t.forEach(a=>{if(a!==e){let e=o(a),n=y(a);e&&d(e,n)||C(a)}})},j=(e,...a)=>{let n=!0,t=e=>g(y(e)),i=(a,...t)=>{let i;if(a===e){if(!r(a))throw Error("atom not writable");let e=o(a),n=b(a,t[0]);e&&d(e,n)||C(a)}else i=j(a,...t);return n||T(),i},m=e.write(t,i,...a);return n=!1,m},K=(e,...a)=>{let n=j(e,...a);return T(),n},A=(e,a)=>{let t={t:new Set(a&&[a]),l:new Set};if(i.set(e,t),n.add(e),y(e).d.forEach((a,n)=>{let t=i.get(n);t?t.t.add(e):n!==e&&A(n,e)}),y(e),s(e)&&e.onMount){let a=e.onMount((...a)=>K(e,...a));a&&(t.u=a)}return t},z=e=>{var a;let t=null==(a=i.get(e))?void 0:a.u;t&&t(),i.delete(e),n.delete(e);let m=o(e);m?(h(m)&&l(m.v),m.d.forEach((a,n)=>{if(n!==e){let a=i.get(n);a&&(a.t.delete(e),p(n,a)&&z(n))}})):console.warn("[Bug] could not find atom state to unmount",e)},M=(e,a,n)=>{let t=new Set(a.d.keys());null==n||n.forEach((a,n)=>{if(t.has(n)){t.delete(n);return}let m=i.get(n);m&&(m.t.delete(e),p(n,m)&&z(n))}),t.forEach(a=>{let n=i.get(a);n?n.t.add(e):i.has(e)&&A(a,e)})},T=()=>{for(;m.size;){let e=Array.from(m);m.clear(),e.forEach(([e,a])=>{let n=o(e);if(n){n.d!==(null==a?void 0:a.d)&&M(e,n,null==a?void 0:a.d);let t=i.get(e);t&&!(a&&!h(a)&&(d(a,n)||c(a,n)))&&t.l.forEach(e=>e())}else console.warn("[Bug] no atom state to flush")})}e.forEach(e=>e()),a.forEach(e=>e("state"))},_=(e,n)=>{let t=x(e);T();let i=t.l;return i.add(n),a.forEach(e=>e("sub")),()=>{i.delete(n),E(e),a.forEach(e=>e("unsub"))}};return{get:S,set:K,sub:_,dev_subscribe_state:a=>(console.warn("[DEPRECATED] dev_subscribe_state is deprecated and will be removed in the next minor version. use dev_subscribe_store instead."),e.add(a),()=>{e.delete(a)}),dev_subscribe_store:e=>(a.add(e),()=>{a.delete(e)}),dev_get_mounted_atoms:()=>n.values(),dev_get_atom_state:e=>t.get(e),dev_get_mounted:e=>i.get(e),dev_restore_atoms:e=>{for(let[a,n]of e)r(a)&&(b(a,n),C(a));T()}}},k=()=>(t||(t=f()),t)}}]);